/* 
 1. Select the body to blank out any default margins & padding.
 */
 
body {
  border: 0;
  margin: 0;
  padding: 0;
}

h1 {
  text-align: center;
}

/*
 1. Parent container has two children: left and right div
 2. Use display flex to the parent
 3. By default, CSS Flexbox will align the children elements horizontally.
 */

#parentContainer {
  background-color: pink;
  width: 100vw;
  height: 100vh;
  display: flex;
}

/* 
 1. Use the flex property on the children to dynamically adjust their dimensions
 */
#child1 {
  background-color: goldenrod;
  flex: 1;
  display: flex;
  padding: 10px;
}

/* 
 1. Child2 has three children, so let's flex them by displaying flex on child2
 2. Child2's children is in a column, so use flex-direction to align it vertically as columns
 */
 
#child2 {
  background-color: fuchsia;
  flex: 3;
  display: flex;
  flex-direction: column;
}

#grandChild0 {
  background-color: darkseagreen;
  flex: 1;
  margin: 10px;
}

/* 
 1. Grandchildren 1-3 belongs to child2
 2. Use the flex property on the grandchildren to align them horizontally
 */

#grandChild1 {
  background-color: blue;
  flex: 1;
  margin: 20px;
}

/* 
 1. Grandchild2 has three children, so display flex here too.
 */
 
#grandChild2 {
  background-color: purple;
  flex: 1;
  display: flex;
  padding: 10px;
}

#grandChild3 {
  background-color: green;
  flex: 1;
  display: flex;
  padding: 10px;
}

#greatGrandChild1 {
  background-color: red;
  flex: 1;
  margin: 10px;
}

#greatGrandChild2 {
  background-color: yellow;
  flex: 1;
  margin: 10px;
}

#greatGrandChild3 {
  background-color: aqua;
  flex: 1;
  margin: 10px;
}

#greatGrandChild4 {
  background-color: brown;
  flex: 1;
  margin: 10px;
}

#greatGrandChild5 {
  background-color: black;
  color: white;
  flex: 1;
  margin: 10px;
}
